define(["require","lib/CommonUtil","THREE","module/GlobalVar"],function(e){"use strict";function i(e){this._axisDirection={x:1,y:1,z:1},this._model=new n.Mesh(e,new n.MeshLambertMaterial({color:this.UNSELECT_COLOR})),this._boundingBox=null,this._init()}var t=e("lib/CommonUtil"),n=e("THREE"),r=e("module/GlobalVar");return i.prototype.SELECT_COLOR=22616,i.prototype.BOX_SELECT_COLOR=9164819,i.prototype.BOX_UNSELECT_COLOR=2627672,i.prototype.UNSELECT_COLOR=13158600,i.prototype.clone=function(){var e=this._model.geometry.clone();return new i(e)},i.prototype._init=function(){this._initModel(),this._initBox()},i.prototype._initModel=function(){this._model.geometry.center(),this._model.material.side=n.DoubleSide,this._model.castShadow=!0,this._model.position.set(0,0,0)},i.prototype._initBox=function(){this._boundingBox=new n.BoxHelper(this._model),this._boundingBox.material.setValues({color:this.BOX_UNSELECT_COLOR}),this._boundingVolume=new n.BoundingBoxHelper(this._model,this.BOX_UNSELECT_COLOR),this._boundingVolume.update()},i.prototype.isOverlap=function(e){e.get().model.updateMatrix(),this._model.updateMatrix();var t=e.get().boxVolume;return t.box.setFromObject(e.get().model),this._boundingVolume.box.setFromObject(this._model),this._boundingVolume.box.isIntersectionBox(t.box)},i.prototype.mirrorX=function(){if(!t.isDefined(this._model))return;this._axisDirection.x*=-1,this._mirror(-1,1,1)},i.prototype.mirrorY=function(){if(!t.isDefined(this._model))return;this._axisDirection.y*=-1,this._mirror(1,-1,1)},i.prototype.mirrorZ=function(){if(!t.isDefined(this._model))return;this._axisDirection.z*=-1,this._mirror(1,1,-1)},i.prototype._mirror=function(e,t,r){this._model.geometry.applyMatrix((new n.Matrix4).makeScale(e,t,r)),this.update()},i.prototype.setScale=function(e,t,n){this.getScale().set(e,t,n),this.update()},i.prototype.getScale=function(){return this._model.scale},i.prototype.getSize=function(){return this.update(),this._boundingVolume.box.size()},i.prototype.reset=function(){this.setScale(1,1,1),this._model.rotation.set(0,0,0),this._mirror(this._axisDirection.x,this._axisDirection.y,this._axisDirection.z),this._axisDirection={x:1,y:1,z:1}},i.prototype.update=function(){this._model.updateMatrix(),this._boundingBox.update(this._model),this._boundingVolume.box.setFromObject(this._model)},i.prototype.dispose=function(){this._model.geometry.dispose(),this._model.material.dispose(),this._boundingBox.geometry.dispose(),this._boundingBox.material.dispose(),this._boundingVolume.geometry.dispose(),this._boundingVolume.material.dispose()},i.prototype.get=function(){return{model:this._model,box:this._boundingBox,boxVolume:this._boundingVolume}},i.prototype.setColor=function(e){this._model.material.setValues({color:e})},i.prototype.setPosition=function(e){this._model.position.set(e.x,e.y,e.z),this.update()},i.prototype.selected=function(){this._model.material.transparent=!0,this._model.material.opacity=.8,this._boundingBox.material.setValues({color:this.BOX_SELECT_COLOR}),this.setColor(this.SELECT_COLOR)},i.prototype.unselected=function(){this._model.material.transparent=!1,this._model.material.opacity=1,this._boundingBox.material.setValues({color:this.BOX_UNSELECT_COLOR}),this.setColor(this.UNSELECT_COLOR)},i});